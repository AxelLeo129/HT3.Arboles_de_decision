nombres <-names(data)
bins=floor(sqrt(nrow(na.exclude(data$LotFrontage))))
bins=nrow(na.exclude(data$LotFrontage))
bins=na.exclude(data$LotFrontage)
bins=na.omit(data$LotFrontage)
bins=nrow(na.omit(data$LotFrontage))
bins=nrow(na.exclude(data$LotFrontage))
#### Variables cualitativas: caracteres
for (val in nombres  ){
if(typeof(data[,val]) == 'character'){
cat("\n")
cat( val,"\n" )
print(sort(table(na.exclude(data[,val])),decreasing = TRUE))
barplot(table(na.exclude(data[,val])), main = val)}
}
data <- read.csv("house-prices-advanced-regression-techniques/test.csv")
str(data)
bins = floor(sqrt(nrow(data)))
#######################
cat("LotArea")
## Histograma
hist(table(data$LotArea), main ="LotArea", breaks = bins)
##  QQ-quantil normal
qqnorm(data$LotArea, pch = 1, frame = FALSE)
qqline(data$LotArea, col = "steelblue", lwd = 2)
## Lilliefonds
lillie.test(table(data$LotArea))
cat("\n")
## Histograma
hist(table(data$LotArea), main ="LotArea", breaks = bins)
#######################
cat("YearBuilt")
## Histograma
hist(table(data$YearBuilt), main ="YearBuilt", breaks = bins)
##  QQ-quantil normal
qqnorm(data$YearBuilt, pch = 1, frame = FALSE)
qqline(data$YearBuilt, col = "steelblue", lwd = 2)
## Lilliefonds
lillie.test(table(data$YearBuilt))
## Histograma
hist(table(data$YearBuilt), main ="YearBuilt", breaks = bins)
View(data)
## Histograma
hist(table(data$YearBuilt), main ="YearBuilt", breaks = bins)
## Histograma
hist(data$YearBuilt, main ="YearBuilt", breaks = bins)
## Lilliefonds
lillie.test(data$LotArea)
## Histograma
hist(data$LotArea, main ="LotArea", breaks = bins)
#######################
cat("LotFrontage")
## Histograma
hist(data$LotFrontage, main ="LotFrontage", breaks = bins)
##  QQ-quantil normal
qqnorm(data$LotFrontage, pch = 1, frame = FALSE)
qqline(data$LotFrontage, col = "steelblue", lwd = 2)
## Lilliefonds
lillie.test(table(data$LotFrontage))
## Lilliefonds
lillie.test(data$LotFrontage)
## Lilliefonds
lillie.test(data$LotFrontage)
## Histograma
hist(data$LotArea, main ="LotArea", breaks = bins)
##  QQ-quantil normal
qqnorm(data$LotArea, pch = 1, frame = FALSE)
qqline(data$LotArea, col = "steelblue", lwd = 2)
## Lilliefonds
lillie.test(data$LotArea)
cat("\n")
#######################
cat("YearBuilt")
## Histograma
hist(data$YearBuilt, main ="YearBuilt", breaks = bins)
summary(data)
na.omit(data$LotFrontage)
length(na.omit(data$LotFrontage))
length(is.na(data$LotFrontage))
length(na.omit(data$LotFrontage))
length(na.omit(data$LotFrontage))
bins=floor(sqrt(length(na.omit(data$LotFrontage))))
## Histograma
hist(data$LotFrontage, main ="LotFrontage", breaks = bins)
##  QQ-quantil normal
qqnorm(data$LotFrontage, pch = 1, frame = FALSE)
qqline(data$LotFrontage, col = "steelblue", lwd = 2)
## Lilliefonds
lillie.test(data$LotFrontage)
cat("\n")
#######################
cat("YearBuilt")
bins=floor(sqrt(length(na.omit(data$YearBuilt))))
## Histograma
hist(data$YearBuilt, main ="YearBuilt", breaks = bins)
##  QQ-quantil normal
qqnorm(data$YearBuilt, pch = 1, frame = FALSE)
qqline(data$YearBuilt, col = "steelblue", lwd = 2)
## Lilliefonds
lillie.test(table(data$YearBuilt))
cat("\n")
#######################
cat("YearRemodAdd")
bins=floor(sqrt(length(na.omit(data$YearRemodAdd))))
## Histograma
hist(data$YearRemodAdd, main ="YearRemodAdd", breaks = bins)
##  QQ-quantil normal
qqnorm(data$YearRemodAdd, pch = 1, frame = FALSE)
qqline(data$YearRemodAdd, col = "steelblue", lwd = 2)
## Histograma
hist(data$YearRemodAdd, main ="YearRemodAdd", breaks = bins)
#######################
cat("MasVnrArea")
bins=floor(sqrt(length(na.omit(data$MasVnrArea))))
## Histograma
hist(data$MasVnrArea, main ="MasVnrArea", breaks = bins)
##  QQ-quantil normal
qqnorm(data$MasVnrArea, pch = 1, frame = FALSE)
qqline(data$MasVnrArea, col = "steelblue", lwd = 2)
## Lilliefonds
lillie.test(table(data$MasVnrArea))
cat("\n")
for (val in nombres  ){
if(typeof(data[,val]) == 'int' ||typeof(data[,val]) == 'double' ){
cat("\n")
cat( val,"\n" )
bins=floor(sqrt(length(na.omit(data[,val])))))
hist(data[,val], main ="MasVnrArea", breaks = bins)
qqnorm(data[,val], pch = 1, frame = FALSE)
qqline(data[,val], col = "steelblue", lwd = 2)
lillie.test(table(data[,val]))
}
}
lillie.test(table(data[,val]))}
for (val in nombres  ){
if(typeof(data[,val]) == 'int' ||typeof(data[,val]) == 'double' ){
cat("\n")
cat( val,"\n" )
bins=floor(sqrt(length(na.omit(data[,val])))))
hist(data[,val], main ="MasVnrArea", breaks = bins)
qqnorm(data[,val], pch = 1, frame = FALSE)
qqline(data[,val], col = "steelblue", lwd = 2)
lillie.test(table(data[,val]))}
}
for (val in nombres){
if(typeof(data[,val]) == 'int'){
cat("\n")
cat( val,"\n" )
bins=floor(sqrt(length(na.omit(data[,val])))))
hist(data[,val], main ="MasVnrArea", breaks = bins)
qqnorm(data[,val], pch = 1, frame = FALSE)
qqline(data[,val], col = "steelblue", lwd = 2)
lillie.test(table(data[,val]))}
}
for(val in nombres){
if(typeof(data[,val]) == 'int'){
cat("\n")
cat( val,"\n" )
bins=floor(sqrt(length(na.omit(data[,val])))))
hist(data[,val], main ="MasVnrArea", breaks = bins)
qqnorm(data[,val], pch = 1, frame = FALSE)
qqline(data[,val], col = "steelblue", lwd = 2)
lillie.test(table(data[,val]))}
}
for(val in nombres){
if(typeof(data[,val]) == 'int'){
cat("\n")
cat( val,"\n" )
bins=floor(sqrt(length(na.omit(data[,val])))))
hist(data[,val], main ="MasVnrArea", breaks = bins)
qqnorm(data[,val], pch = 1, frame = FALSE)
qqline(data[,val], col = "steelblue", lwd = 2)
lillie.test(table(data[,val]))
}
}
print(lillie.test(table(data[,val])))
for(val in nombres){
if(typeof(data[,val]) == 'int'){
cat("\n")
cat( val,"\n" )
bins=floor(sqrt(length(na.omit(data[,val])))))
hist(data[,val], main ="MasVnrArea", breaks = bins)
qqnorm(data[,val], pch = 1, frame = FALSE)
qqline(data[,val], col = "steelblue", lwd = 2)
print(lillie.test(table(data[,val])))
}
}
for(val in nombres){
for(val in nombres){
for(val in nombres){
for(val in nombres){
if(typeof(data[,val]) == 'int'){
cat("\n")
cat( val,"\n" )
bins=floor(sqrt(length(na.omit(data[,val])))))
hist(data[,val], main =val, breaks = bins)
qqnorm(data[,val], pch = 1, frame = FALSE)
qqline(data[,val], col = val, lwd = 2)
print(lillie.test(table(data[,val])))
}
}
for(val in nombres){
if(typeof(data[,val]) == 'int'){
cat("\n")
cat( val,"\n" )
bins=floor(sqrt(length(na.omit(data[,val])))))
hist(data[,val], main =val, breaks = bins)
qqnorm(data[,val], pch = 1, frame = FALSE)
qqline(data[,val], col = val, lwd = 2)
print(lillie.test(table(data[,val])))
}
}
for(val in nombres){
if(typeof(data[,val]) == 'int'){
cat("\n")
cat( val,"\n" )
bins=floor(sqrt(length(na.omit(data[,val])))))
hist(data[,val], main =val, breaks = bins)
qqnorm(data[,val], pch = 1, frame = FALSE)
qqline(data[,val], col = val, lwd = 2)
print(lillie.test(table(data[,val])))}
}
for(val in nombres){
if(typeof(data[,val]) == 'int'){
cat("\n")
cat( val,"\n" )
bins=floor(sqrt(length(na.omit(data[,val])))))
hist(na.omit(data[,val]), main =val, breaks = bins)
qqnorm(data[,val], pch = 1, frame = FALSE)
qqline(data[,val], col = val, lwd = 2)
print(lillie.test(table(data[,val])))}
}
for(val in nombres){
if(typeof(data[,val]) == 'int'){
cat("\n")
cat( val,"\n" )
bins=floor(sqrt(length(na.omit(data[,val])))))
hist(na.omit(data[,val]), main =val, breaks = bins)
qqnorm(na.omit(data[,val]), pch = 1, frame = FALSE)
qqline(na.omit(data[,val]), col = val, lwd = 2)
print(lillie.test(table(data[,val])))}
}
for(val in nombres){
if(typeof(data[,val]) == 'int'){
cat("\n")
cat( val,"\n" )
bins=floor(sqrt(length(na.omit(data[,val])))))
hist(na.omit(data[,val]), main =val, breaks = bins)
qqnorm(na.omit(data[,val]), pch = 1, frame = FALSE)
qqline(na.omit(data[,val]), col = val, lwd = 2)
print(lillie.test(na.omit(data[,val])))}
}
for(val in nombres){
if(typeof(data[,val]) == 'int'){
cat("\n")
cat( val,"\n" )
bins=floor(sqrt(length(na.omit(data[,val])))))
hist(na.omit(data[,val]), main =val, breaks = bins)
qqnorm(na.omit(data[,val]), pch = 1, frame = FALSE)
qqline(na.omit(data[,val]), col = val, lwd = 2)
#print(lillie.test(na.omit(data[,val])))
}
}
for(val in nombres){
if(typeof(data[,val]) == 'int'){
cat("\n")
cat( val,"\n" )
bins=floor(sqrt(length(na.omit(data[,val])))))
hist(na.omit(data[,val]), main =val, breaks = bins)
qqnorm(na.omit(data[,val]), pch = 1, frame = FALSE)
qqline(na.omit(data[,val]), col = val, lwd = 2)
#print(lillie.test(na.omit(data[,val])))
}
}
cat( val,"\n" )
for(val in nombres){
if(typeof(data[,val]) == 'int'){
cat("\n")
cat( val,"\n" )
}
}
for(val in nombres){
if(typeof(data[,val]) == 'int'){
cat("\n")
cat( val,"\n" )
print(val)
}
}
for(val in nombres){
if(typeof(data[,val]) == 'int'){
cat("\n")
cat( val,"\n" )
hist(data[,val], main ="MasVnrArea", breaks = bins)
}
}
hist(data[,val], main ="MasVnrArea", breaks = bins)
for(val in nombres){
if(typeof(data[,val]) == 'int'){
cat("\n")
cat( val,"\n" )
hist(data[,val], main ="MasVnrArea", breaks = bins)
}
}
print(val)
for(val in nombres){
if(typeof(data[,val]) == 'int'){
print(val)
}
}
for (val in nombres  ){
if(typeof(data[,val]) == 'character'){
cat("\n")
cat( val,"\n" )
}
}
for (val in nombres  ){
if(typeof(data[,val]) == 'int'){
cat("\n")
cat( val,"\n" )
}
}
for (val in nombres  ){
if(typeof(data[,val]) == 'interger'){
cat("\n")
cat( val,"\n" )
}
}
summary(data)
str(data)
if(typeof(data[,val]) == 'int'){
cat("\n")
cat( val,"\n" )
}
typeof(data[,MasVnrArea])
typeof(data[,"MasVnrArea"])
for (val in nombres  ){
if(typeof(data[,val]) == 'integer'){
cat("\n")
cat( val,"\n" )
}
}
for (val in nombres  ){
if(typeof(data[,val]) == 'integer'){
cat("\n")
cat( val,"\n" )
bins=floor(sqrt(length(na.omit(data[,val]))))
hist(data[,val], main ="MasVnrArea", breaks = bins)
qqnorm(data[,val], pch = 1, frame = FALSE)
qqline(data[,val], col = "steelblue", lwd = 2)
lillie.test(data[,val])
}
}
for (val in nombres  ){
if(typeof(data[,val]) == 'integer'){
cat("\n")
cat( val,"\n" )
bins=floor(sqrt(length(na.omit(data[,val]))))
hist(data[,val], main =val, breaks = bins)
qqnorm(data[,val], pch = 1, frame = FALSE,main = val)
qqline(data[,val], col = "steelblue", lwd = 2)
lillie.test(data[,val])
}
}
for (val in nombres  ){
if(typeof(data[,val]) == 'integer'){
cat("\n")
cat( val,"\n" )
bins=floor(sqrt(length(na.omit(data[,val]))))
hist(data[,val], main =val, breaks = bins)
qqnorm(data[,val], pch = 1, frame = FALSE,main = val)
qqline(data[,val], col = "steelblue", lwd = 2)
print(lillie.test(data[,val]))
}
}
setwd("C:/Users/LENOVO/Desktop/Clases/Minería de datos/Github/HT3.Arboles_de_decision")
library(corrplot)
library(nortest)
data <- read.csv("house-prices-advanced-regression-techniques/test.csv")
str(data)
bins = floor(sqrt(nrow(data)))
summary(data)
nombres <-names(data)
#### Variables cualitativas: caracteres
for (val in nombres  ){
if(typeof(data[,val]) == 'character'){
cat("\n")
cat( val,"\n" )
print(sort(table(na.exclude(data[,val])),decreasing = TRUE))
barplot(table(na.exclude(data[,val])), main = val)}
}
cat("MSSubClass")
print(sort(table(na.omit(data$MSSubClass)),decreasing = TRUE))
barplot(table(na.exclude(data$MSSubClass)), main ="MSSubClass" )
cat("\n")
cat("OverallQual")
print(sort(table(na.omit(data$OverallQual)),decreasing = TRUE))
barplot(table(na.exclude(data$OverallQual)), main ="OverallQual" )
cat("\n")
cat("OverallCond")
print(sort(table(data$OverallCond),decreasing = TRUE))
barplot(table(data$OverallCond), main ="OverallCond" )
cat("\n")
#######################
cat("LotFrontage")
bins=floor(sqrt(length(na.omit(data$LotFrontage))))
## Histograma
hist(data$LotFrontage, main ="LotFrontage", breaks = bins)
##  QQ-quantil normal
qqnorm(data$LotFrontage, pch = 1, frame = FALSE)
qqline(data$LotFrontage, col = "steelblue", lwd = 2)
## Lilliefonds
lillie.test(data$LotFrontage)
cat("\n")
#######################
cat("LotArea")
bins=floor(sqrt(length(na.omit(data$LotArea))))
## Histograma
hist(data$LotArea, main ="LotArea", breaks = bins)
##  QQ-quantil normal
qqnorm(data$LotArea, pch = 1, frame = FALSE)
qqline(data$LotArea, col = "steelblue", lwd = 2)
## Lilliefonds
lillie.test(data$LotArea)
cat("\n")
#######################
cat("YearBuilt")
bins=floor(sqrt(length(na.omit(data$YearBuilt))))
## Histograma
hist(data$YearBuilt, main ="YearBuilt", breaks = bins)
##  QQ-quantil normal
qqnorm(data$YearBuilt, pch = 1, frame = FALSE)
qqline(data$YearBuilt, col = "steelblue", lwd = 2)
## Lilliefonds
lillie.test(table(data$YearBuilt))
cat("\n")
#######################
cat("YearRemodAdd")
bins=floor(sqrt(length(na.omit(data$YearRemodAdd))))
## Histograma
hist(data$YearRemodAdd, main ="YearRemodAdd", breaks = bins)
##  QQ-quantil normal
qqnorm(data$YearRemodAdd, pch = 1, frame = FALSE)
qqline(data$YearRemodAdd, col = "steelblue", lwd = 2)
## Lilliefonds
lillie.test(table(data$YearRemodAdd))
cat("\n")
#######################
cat("MasVnrArea")
bins=floor(sqrt(length(na.omit(data$MasVnrArea))))
## Histograma
hist(data$MasVnrArea, main ="MasVnrArea", breaks = bins)
##  QQ-quantil normal
qqnorm(data$MasVnrArea, pch = 1, frame = FALSE)
qqline(data$MasVnrArea, col = "steelblue", lwd = 2)
## Lilliefonds
lillie.test(table(data$MasVnrArea))
cat("\n")
for (val in nombres  ){
if(typeof(data[,val]) == 'integer'){
cat("\n")
cat( val,"\n" )
bins=floor(sqrt(length(na.omit(data[,val]))))
hist(data[,val], main =val, breaks = bins)
qqnorm(data[,val], pch = 1, frame = FALSE,main = val)
qqline(data[,val], col = "steelblue", lwd = 2)
print(lillie.test(data[,val]))
}
}
summary(data)
bins=floor(sqrt(length(na.omit(data$X1stFlrSF))))
h1<-hist(data$X1stFlrSF, main =val, breaks = bins)
bins=floor(sqrt(length(na.omit(data$LotArea))))
h2<-hist(data$LotArea, main =val, breaks = bins)
plot(h1,col =c1)
plot(h1,col =c2, add = TRUE)
bins=floor(sqrt(length(na.omit(data$X1stFlrSF))))
h1<-hist(data$X1stFlrSF, main =val, breaks = bins, plot = FALSE)
bins=floor(sqrt(length(na.omit(data$LotArea))))
h2<-hist(data$LotArea, main =val, breaks = bins,plot = FALSE)
plot(h1,col =c1)
plot(h1,col =c2, add = TRUE)
bins=floor(sqrt(length(na.omit(data$X1stFlrSF))))
h1<-hist(data$X1stFlrSF, main =val, breaks = bins, plot = FALSE)
bins=floor(sqrt(length(na.omit(data$X1stFlrSF))))
h1<-hist(data$X1stFlrSF,  breaks = bins, plot = FALSE)
bins=floor(sqrt(length(na.omit(data$LotArea))))
h2<-hist(data$LotArea, breaks = bins,plot = FALSE)
plot(h1,col =c1)
plot(h1)
plot(h1, add = TRUE)
plot(h2, add = TRUE)
bins=floor(sqrt(length(na.omit(data$LotArea))))
h2<-hist(data$LotArea, breaks = bins,plot = FALSE)
plot(h1)
plot(h2, add = TRUE)
bins=floor(sqrt(length(na.omit(data$X1stFlrSF))))
h1<-hist(data$X1stFlrSF,  breaks = bins, plot = FALSE)
bins=floor(sqrt(length(na.omit(data$LotArea))))
h2<-hist(data$LotArea, breaks = bins,plot = FALSE)
plot(h2)
plot(h1, add = TRUE)
for (val in nombres  ){
if(typeof(data[,val]) == 'integer'){
cat("\n")
cat( val,"\n" )
bins=floor(sqrt(length(na.omit(data[,val]))))
hist(data[,val], main =val, breaks = bins)
qqnorm(data[,val], pch = 1, frame = FALSE,main = val)
qqline(data[,val], col = "steelblue", lwd = 2)
print(lillie.test(data[,val]))
}
}

main = "Histograma para la duración de las películas",
xlab = "Tiempo (m)",
breaks = 105)
qqnorm(data2$runtime, pch = 1, frame = FALSE)
qqline(data2$runtime, col = "steelblue", lwd = 2)
qqnorm(data3$runtime, pch = 1, frame = FALSE)
data3 = data[data$runtime > 30,]
data3 = data[data$runtime > 30,]
hist(data2$runtime,
main = "Histograma para la duración de las películas",
xlab = "Tiempo (m)",
breaks = 105)
qqnorm(data3$runtime, pch = 1, frame = FALSE)
qqline(data3$runtime, col = "steelblue", lwd = 2)
lillie.test((data3$runtime))
data2 = data[data$budget > 10000000,]
hist(data2$budget,
main = "Histograma para el presupuesto de las películas",
xlab = "Presupuesto",
breaks = 105)
qqnorm(data2$budget, pch = 1, frame = FALSE)
qqline(data2$budget, col = "steelblue", lwd = 2)
data2 = data[data$budget > 1000000,]
hist(data2$budget,
main = "Histograma para el presupuesto de las películas",
xlab = "Presupuesto",
breaks = 105)
qqnorm(data2$budget, pch = 1, frame = FALSE)
qqline(data2$budget, col = "steelblue", lwd = 2)
### Ganancias
Para el estudio de estos datos, se analizaron películas que hayan ganado más de $1,000,000 USD debido a que se detectaron 2 escalas distintas en el set de datos. Además de esto no se sabe si la escala fue cambiada alguna otra vez.
```{r}
data21 = data[data$revenue > 1000000,]
hist(data2$budget,
main = "Histograma para las ganancias de las películas",
xlab = "Presupuesto",
breaks = 105)
```
data21 = data[data$revenue > 1000000,]
hist(data2$budget,
main = "Histograma para las ganancias de las películas",
xlab = "Presupuesto",
breaks = 105)
data21 = data[data$revenue > 1000000,]
hist(data21$budget,
main = "Histograma para las ganancias de las películas",
xlab = "Presupuesto",
breaks = 105)
View(data21)
hist(data21$budget,
main = "Histograma para las ganancias de las películas",
xlab = "Presupuesto",
breaks = 100)
qqnorm(data21$budget, pch = 1, frame = FALSE)
qqline(data2$budget, col = "steelblue", lwd = 2)
qqnorm(data21$revenue, pch = 1, frame = FALSE)
qqline(data2$revenue, col = "steelblue", lwd = 2)
strsplit(data$genres,"|")
strsplit(data$genres," ")
strsplit(data$genres," | ")
strsplit(data$genres,"|")
strsplit(data$genres, split, fixed = FALSE, perl = FALSE, useBytes = FALSE)
strsplit(data$genres, "", fixed = FALSE, perl = FALSE, useBytes = FALSE)
strsplit(data$genres, "|", fixed = FALSE, perl = FALSE, useBytes = FALSE)
strsplit(data$genres, " ", fixed = FALSE, perl = FALSE, useBytes = FALSE)
```{r}
splitPopGenres <- c(movies$genres)
splitPopGenres <- c(data$genres)
splitPopGenres
splitPopGenres <- strsplit(splitPopGenres, "|", fixed = TRUE)
splitPopGenres
splitPopGenres <- unlist(splitPopGenres)
splitPopGenres
splitPopGenres <- table(splitPopGenres)
splitPopGenres
barplot(splitPopGenres, horiz = TRUE, xlab = 'Frecuencia', main = ' Generos', col=col3, las = 1)
splitPopGenres <- c(data$genres)
splitPopGenres <- strsplit(splitPopGenres, "|", fixed = TRUE)
splitPopGenres <- unlist(splitPopGenres)
splitPopGenres <- table(splitPopGenres)
barplot(splitPopGenres, horiz = TRUE, xlab = 'Frecuencia', main = ' Generos', col=col3, las = 1)
barplot(splitPopGenres, horiz = TRUE, xlab = 'Frecuencia', main = ' Generos')
barplot(splitPopGenres, horiz = TRUE, xlab = 'Frecuencia', main = ' Generos', col=col3, las = 1)
col3 <- brewer.pal(9,'Pastel1')
barplot(splitPopGenres, horiz = TRUE, xlab = 'Frecuencia', main = ' Generos', col=col3, las = 1)
barplot(splitPopGenres, horiz = TRUE, xlab = 'Frecuencia', main = ' Generos', las = 1)
barplot(splitPopGenres, xlab = 'Frecuencia', main = ' Generos', las = 1)
barplot(splitPopGenres, xlab = 'Frecuencia', main = ' Generos', )
barplot(splitPopGenres, xlab = 'Frecuencia', main = ' Generos' )
splitPopGenres <- table(splitPopGenres)
splitPopGenres <- table(splitPopGenres)
barplot(splitPopGenres, xlab = 'Frecuencia', main = ' Generos' )
splitPopGenres <- c(data$genres)
splitPopGenres <- strsplit(splitPopGenres, "|", fixed = TRUE)
splitPopGenres <- unlist(splitPopGenres)
splitPopGenres <- table(splitPopGenres)
barplot(splitPopGenres, xlab = 'Frecuencia', main = ' Generos' )
barplot(data$director, xlab = 'Frecuencia', main = ' Generos' )
barplot(directores, xlab = 'Frecuencia', main = ' Generos' )
directores = c(data$director)
directores <- unlist(directores)
directores <- table(directores)
barplot(directores, xlab = 'Frecuencia', main = ' Generos' )
production_companies = c(data$production_companies)
production_companies <- unlist(directores)
production_companies <- table(directores)
barplot(directores, xlab = 'Frecuencia', main = ' Compañias de producción' )
production_companies = c(data$production_companies)
production_companies <- unlist(production_companies)
production_companies <- table(production_companies)
barplot(directores, xlab = 'Frecuencia', main = ' Compañias de producción' )
production_companies = c(data$production_companies)
production_companies <- unlist(production_companies)
production_companies <- table(production_companies)
barplot(production_companies, xlab = 'Frecuencia', main = ' Compañias de producción' )
View(data)
splitcasts <- c(data$cast)
splitcasts <- strsplit(splitcasts, "|", fixed = TRUE)
splitcasts <- unlist(splitcasts)
splitcasts <- table(splitcasts)
barplot(splitcasts, xlab = 'Frecuencia', main = 'Actores' )
barplot(production_companies, xlab = 'Frecuencia', main = ' Compañias de producción' )
splitcasts <- c(data$cast)
splitcasts <- strsplit(splitcasts, "|", fixed = TRUE)
splitcasts <- unlist(splitcasts)
splitcasts <- table(splitcasts)
barplot(splitcasts, xlab = 'Frecuencia', main = 'Actores' )
data <- data[with(data,order(-"budget")),]
data5 <- data[with(data,order(-"budget")),]
data5 <- data[with(data,order("budget")),]
View(data5)
data5 <- data[order("budget"),]
View(data5)
View(data5)
data5 <- data[order(budget),]
data5 <- data[order("budget"),]
knitr::opts_chunk$set(echo = TRUE)
library(nortest)
data <-read.csv("C:/Users/LENOVO/Desktop/Clases/Minería de datos/HT/HT1DataMining/data/tmdb-movies.csv")
summary(data)
str(data)
hist(data$popularity[data$popularity != 0],
main = "Histograma sobre popularidad de películas en imdb",
xlab = "Indice de popularidad ",
breaks = 105)
qqnorm(data$popularity, pch = 1, frame = FALSE)
qqline(data$popularity, col = "steelblue", lwd = 2)
lillie.test((data$popularity))
data2 = data[data$budget > 1000000,]
hist(data2$budget,
main = "Histograma para el presupuesto de las películas",
xlab = "Presupuesto",
breaks = 105)
qqnorm(data2$budget, pch = 1, frame = FALSE)
qqline(data2$budget, col = "steelblue", lwd = 2)
lillie.test((data2$budget))
data21 = data[data$revenue > 1000000,]
hist(data21$budget,
main = "Histograma para las ganancias de las películas",
xlab = "Presupuesto",
breaks = 100)
qqnorm(data21$revenue, pch = 1, frame = FALSE)
qqline(data2$revenue, col = "steelblue", lwd = 2)
data3 = data[data$runtime > 30,]
hist(data2$runtime,
main = "Histograma para la duración de las películas",
xlab = "Tiempo (m)",
breaks = 105)
splitPopGenres <- c(data$genres)
splitPopGenres <- strsplit(splitPopGenres, "|", fixed = TRUE)
splitPopGenres <- unlist(splitPopGenres)
splitPopGenres <- table(splitPopGenres)
barplot(splitPopGenres, xlab = 'Frecuencia', main = ' Generos' )
directores = c(data$director)
directores <- unlist(directores)
directores <- table(directores)
barplot(directores, xlab = 'Frecuencia', main = ' directores' )
production_companies = c(data$production_companies)
production_companies <- unlist(production_companies)
production_companies <- table(production_companies)
barplot(production_companies, xlab = 'Frecuencia', main = ' Compañias de producción' )
splitcasts <- c(data$cast)
splitcasts <- strsplit(splitcasts, "|", fixed = TRUE)
splitcasts <- unlist(splitcasts)
splitcasts <- table(splitcasts)
barplot(splitcasts, xlab = 'Frecuencia', main = 'Actores' )
data5 <- data[order(-"budget"),]
data5 <- data[order(-budget),]
data5 <- data[order(-data$budget),]
tail(data5,10)
data5 <- data[order(data$budget),]
tail(data5,10)
tail(data5$original_title,10)
View(data5)
tail(data5$budget,10)
head(data5$budget,10)
head(data5$original_title,10)
data5 <- data[order(-data$budget),]
head(data5$original_title,10)
data6 <- data[order(-data$revenue),]
head(data6$original_title,10)
knitr::opts_chunk$set(echo = TRUE)
library(nortest)
data <-read.csv("C:/Users/LENOVO/Desktop/Clases/Minería de datos/HT/HT1DataMining/data/tmdb-movies.csv")
summary(data)
str(data)
hist(data$popularity[data$popularity != 0],
main = "Histograma sobre popularidad de películas en imdb",
xlab = "Indice de popularidad ",
breaks = 105)
qqnorm(data$popularity, pch = 1, frame = FALSE)
qqline(data$popularity, col = "steelblue", lwd = 2)
lillie.test((data$popularity))
data2 = data[data$budget > 1000000,]
hist(data2$budget,
main = "Histograma para el presupuesto de las películas",
xlab = "Presupuesto",
breaks = 105)
qqnorm(data2$budget, pch = 1, frame = FALSE)
qqline(data2$budget, col = "steelblue", lwd = 2)
lillie.test((data2$budget))
data21 = data[data$revenue > 1000000,]
hist(data21$budget,
main = "Histograma para las ganancias de las películas",
xlab = "Presupuesto",
breaks = 100)
qqnorm(data21$revenue, pch = 1, frame = FALSE)
qqline(data2$revenue, col = "steelblue", lwd = 2)
data3 = data[data$runtime > 30,]
hist(data2$runtime,
main = "Histograma para la duración de las películas",
xlab = "Tiempo (m)",
breaks = 105)
splitPopGenres <- c(data$genres)
splitPopGenres <- strsplit(splitPopGenres, "|", fixed = TRUE)
splitPopGenres <- unlist(splitPopGenres)
splitPopGenres <- table(splitPopGenres)
barplot(splitPopGenres, xlab = 'Frecuencia', main = ' Generos' )
directores = c(data$director)
directores <- unlist(directores)
directores <- table(directores)
barplot(directores, xlab = 'Frecuencia', main = ' directores' )
production_companies = c(data$production_companies)
production_companies <- unlist(production_companies)
production_companies <- table(production_companies)
barplot(production_companies, xlab = 'Frecuencia', main = ' Compañias de producción' )
splitcasts <- c(data$cast)
splitcasts <- strsplit(splitcasts, "|", fixed = TRUE)
splitcasts <- unlist(splitcasts)
splitcasts <- table(splitcasts)
barplot(splitcasts, xlab = 'Frecuencia', main = 'Actores' )
data5 <- data[order(-data$budget),]
head(data5$original_title,10)
data6 <- data[order(-data$revenue),]
head(data6$original_title,10)
install.packages("nbClust")
View(data)
View(data)
install.package(NbClust)
install.packages(NbClust)
install.packages("NbClust")
install.packages("e1071")
install.packages("cluster")
install.packages("mclust")
install.packages("mclust")
install.packages("fpc")
install.packages("factoextra")
clear
setwd("C:/Users/LENOVO/Desktop/Clases/Minería de datos/Github/HT3.Arboles_de_decision")
library(corrplot)
library(nortest)
data <- read.csv("house-prices-advanced-regression-techniques/test.csv")
str(data)
bins = floor(sqrt(nrow(data)))
summary(data)
nombres <-names(data)
#### Variables cualitativas: caracteres
for (val in nombres  ){
if(typeof(data[,val]) == 'character'){
cat("\n")
cat( val,"\n" )
print(sort(table(na.exclude(data[,val])),decreasing = TRUE))
barplot(table(na.exclude(data[,val])), main = val)}
}
cat("MSSubClass")
print(sort(table(na.omit(data$MSSubClass)),decreasing = TRUE))
barplot(table(na.exclude(data$MSSubClass)), main ="MSSubClass" )
cat("\n")
cat("OverallQual")
print(sort(table(na.omit(data$OverallQual)),decreasing = TRUE))
barplot(table(na.exclude(data$OverallQual)), main ="OverallQual" )
cat("\n")
cat("OverallCond")
print(sort(table(data$OverallCond),decreasing = TRUE))
barplot(table(data$OverallCond), main ="OverallCond" )
cat("\n")
for (val in nombres  ){
if(typeof(data[,val]) == 'integer'){
cat("\n")
cat( val,"\n" )
bins=floor(sqrt(length(na.omit(data[,val]))))
hist(data[,val], main =val, breaks = bins)
qqnorm(data[,val], pch = 1, frame = FALSE,main = val)
qqline(data[,val], col = "steelblue", lwd = 2)
print(lillie.test(data[,val]))
}
}
bins=floor(sqrt(length(na.omit(data$X1stFlrSF))))
h1<-hist(data$X1stFlrSF,  breaks = bins, plot = FALSE)
bins=floor(sqrt(length(na.omit(data$LotArea))))
h2<-hist(data$LotArea, breaks = bins,plot = FALSE)
plot(h2)
plot(h1, add = TRUE)
for (val in nombres  ){
if(typeof(data[,val]) == 'integer'){
cat("\n")
cat( val,"\n" )
bins=floor(sqrt(length(na.omit(data[,val]))))
hist(data[,val], main =val, breaks = bins)
qqnorm(data[,val], pch = 1, frame = FALSE,main = val)
qqline(data[,val], col = "steelblue", lwd = 2)
print(lillie.test(data[,val]))
}
}
summary(data)
bins=floor(sqrt(length(na.omit(data$X1stFlrSF))))
h1<-hist(data$X1stFlrSF,  breaks = bins, plot = FALSE)
bins=floor(sqrt(length(na.omit(data$X2ndFlrSF))))
h2<-hist(data$LotArea, breaks = bins,plot = FALSE)
plot(h2)
plot(h1, add = TRUE)
bins=floor(sqrt(length(na.omit(data$X1stFlrSF))))
h1<-hist(data$X1stFlrSF,  breaks = bins, plot = FALSE)
bins=floor(sqrt(length(na.omit(data$X2ndFlrSF))))
h2<-hist(data$X2ndFlrSF, breaks = bins,plot = FALSE)
plot(h2)
plot(h1, add = TRUE)
bins=floor(sqrt(length(na.omit(data$X1stFlrSF))))
h1<-hist(data$X1stFlrSF,  breaks = bins, plot = FALSE,col = 'red')
bins=floor(sqrt(length(na.omit(data$X2ndFlrSF))))
h2<-hist(data$X2ndFlrSF, breaks = bins,plot = FALSE, col = 'blue')
plot(h2)
plot(h1, add = TRUE)
h2<-hist(data$X2ndFlrSF, breaks = bins,plot = FALSE, col = "lightcyan")
h2<-hist(data$X2ndFlrSF, breaks = bins,plot = FALSE, col="lightcyan")
h1<-hist(data$X1stFlrSF,  breaks = bins, plot = FALSE,fill = 'red')
h2<-hist(data$X2ndFlrSF, breaks = bins,plot = FALSE, fill="lightcyan")
?hist
h1<-color.hist(data$X1stFlrSF,  breaks = bins, plot = FALSE,fill = 'red')
h1<-hist(data$X1stFlrSF,  breaks = bins, plot = FALSE,fill = 'red')
h1<-hist(data$X1stFlrSF,  breaks = bins, plot = FALSE,fill = "red")
bins=floor(sqrt(length(na.omit(data$X2ndFlrSF))))
h2<-hist(data$X2ndFlrSF, breaks = bins,plot = FALSE, fill="lightcyan")
plot(h2)
plot(h1, add = TRUE)
?hist
bins=floor(sqrt(length(na.omit(data$X1stFlrSF))))
h1<-hist(data$X1stFlrSF,  breaks = bins, plot = FALSE,col  = "red")
bins=floor(sqrt(length(na.omit(data$X2ndFlrSF))))
h2<-hist(data$X2ndFlrSF, breaks = bins,plot = FALSE, col="lightcyan")
plot(h2)
plot(h1, add = TRUE)
plot(h2,col  = "red")
plot(h1, add = TRUE, col="lightcyan")
bins=floor(sqrt(length(na.omit(data$X1stFlrSF))))
h1<-hist(data$X1stFlrSF,  breaks = bins, plot = FALSE)
bins=floor(sqrt(length(na.omit(data$X2ndFlrSF))))
h2<-hist(data$X2ndFlrSF, breaks = bins,plot = FALSE)
plot(h2,col  = rgb(0.1,0.7,0.2,0.3))
plot(h1, add = TRUE, col=rgb(0.7, 0.2, 0.1, 0.3))
plot(h2,col  = rgb(0.1,0.7,0.2,0.3), xlab = "m^2")
plot(h1, add = TRUE, col=rgb(0.7, 0.2, 0.1, 0.3))
plot(h2,col  = rgb(0.1,0.7,0.2,0.3), xlab = "m^2", main = " Comparación de  áreas entre el primer y segundo nivel")
plot(h1, add = TRUE, col=rgb(0.7, 0.2, 0.1, 0.3))
legend("topright",
c("1st floor", "2nd floor"),
lty=c(1, 2),
col=c(rgb(0.1,0.7,0.2,0.3),rgb(0.7, 0.2, 0.1, 0.3)),
bty = "n")
plot(h2,col  = rgb(0.1,0.7,0.2,0.3), xlab = "m^2", main = " Comparación de  áreas entre el primer y segundo nivel")
plot(h1, add = TRUE, col=rgb(0.7, 0.2, 0.1, 0.3))
legend("topright",
c("2nd floor", "1st floor"),
lty=c(1, 2),
col=c(rgb(0.1,0.7,0.2,0.3),rgb(0.7, 0.2, 0.1, 0.3)),
bty = "n")
for (val in nombres  ){
if(typeof(data[,val]) == 'integer'){
cat("\n")
cat( val,"\n" )
bins=floor(sqrt(length(na.omit(data[,val]))))
hist(data[,val], main =val, breaks = bins)
qqnorm(data[,val], pch = 1, frame = FALSE,main = val)
qqline(data[,val], col = "steelblue", lwd = 2)
print(lillie.test(data[,val]))
}
}
summary(data)
cuantitativas <- new.frame()
new.cuantitativas <- data.frame()
cuantitativas <- data.frame()
for (val in nombres  ){
if(typeof(data[,val]) == 'integer'){
cat("\n")
cat( val,"\n" )
bins=floor(sqrt(length(na.omit(data[,val]))))
hist(data[,val], main =val, breaks = bins)
qqnorm(data[,val], pch = 1, frame = FALSE,main = val)
qqline(data[,val], col = "steelblue", lwd = 2)
print(lillie.test(data[,val]))
cuantitativas[,val]<- data[,val]
}
}
cuantitativas <- data.frame(data$Id)
View(cuantitativas)
for (val in nombres  ){
if(typeof(data[,val]) == 'integer'){
cat("\n")
cat( val,"\n" )
bins=floor(sqrt(length(na.omit(data[,val]))))
hist(data[,val], main =val, breaks = bins)
qqnorm(data[,val], pch = 1, frame = FALSE,main = val)
qqline(data[,val], col = "steelblue", lwd = 2)
print(lillie.test(data[,val]))
cuantitativas[,val]<- data[,val]
}
}
library(cluster)
library(e1071)
library(mclust)
library(fpc)
library(NbClust)
###### Corrplot
corrplot(cuantitativas)
###### Corrplot
corrplot(na.omit(cuantitativas))
###### Corrplot
corrplot(na.omit(cuantitativas[,1:]))
View(cuantitativas)
View(cuantitativas)
###### Corrplot
cuantitativas$data.Id<- NULL
corrplot(cuantitativas)
for (val in nombres  ){
if(typeof(data[,val]) == 'integer'){
cat("\n")
cat( val,"\n" )
bins=floor(sqrt(length(na.omit(data[,val]))))
hist(data[,val], main =val, breaks = bins)
qqnorm(data[,val], pch = 1, frame = FALSE,main = val)
qqline(data[,val], col = "steelblue", lwd = 2)
print(lillie.test(data[,val]))
cuantitativas[,val]<- na.omit(data[,val])
}
}
for (val in nombres  ){
if(typeof(data[,val]) == 'integer'){
cat("\n")
cat( val,"\n" )
bins=floor(sqrt(length(na.omit(data[,val]))))
hist(data[,val], main =val, breaks = bins)
qqnorm(data[,val], pch = 1, frame = FALSE,main = val)
qqline(data[,val], col = "steelblue", lwd = 2)
print(lillie.test(data[,val]))
cuantitativas[,val]<-data[,val]
}
}
corrplot(na.omit(cuantitativas))
cov(na.omit(cuantitativas))
corrplot(cov(na.omit(cuantitativas)))
corrplot(na.omit(cuantitativas))
cuantitativas<-na.omit(cuantitativas)
###### Corrplot
cuantitativas$data.Id<- NULL
corrplot(na.omit(cuantitativas))
View(cuantitativas)
cuantitativas$Id <- NULL
corrplot(na.omit(cuantitativas))
corrplot(cuantitativas)
?corrplot
corrplot(cuantitativas, na.rm = TRUE)
nums <- sapply(data, is.numeric)
cuantitativa <- data[ , nums]
cuantitativas<-na.omit(cuantitativas)
###### Corrplot
cuantitativas$data.Id<- NULL
cuantitativas$Id <- NULL
cuantitativas<-na.omit(cuantitativas)
corrplot(cuantitativas)
corrplot(cuantitativas,0.7)
corrplot(cuantitativas,use="complete.obs")
sum(is.na(cuantitativas))
nums <- sapply(data, is.numeric)
cuantitativas <- data[ , nums]
cuantitativas<-na.omit(cuantitativas)
###### Corrplot
cuantitativas$data.Id<- NULL
cuantitativas$Id <- NULL
cuantitativas<-na.omit(cuantitativas)
corrplot(cuantitativas,use="complete.obs")
sum(is.infinite(cuantitativas))
sum(is.infinite(cuantitativas))
sum(is.nan(cuantitativas))
sum(is.na(cuantitativas))
library(hablar)
install.packages("hablar")
library(hablar)
s(cuantitativas)
cuantitativas<-na.omit(cuantitativas)
write.csv(cuantitativas, "C:/Users/LENOVO/Desktop/Clases/Minería de datos")
write.csv(cuantitativas, "C:/Users/LENOVO/Desktop/Clases/Minería de datos")
write.csv(cuantitativas, "C:/Users/LENOVO/Desktop/Clases/Minería de datos/cuantitativas.csv")

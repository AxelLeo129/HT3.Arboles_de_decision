qqnorm(data21$budget, pch = 1, frame = FALSE)
qqline(data2$budget, col = "steelblue", lwd = 2)
qqnorm(data21$revenue, pch = 1, frame = FALSE)
qqline(data2$revenue, col = "steelblue", lwd = 2)
strsplit(data$genres,"|")
strsplit(data$genres," ")
strsplit(data$genres," | ")
strsplit(data$genres,"|")
strsplit(data$genres, split, fixed = FALSE, perl = FALSE, useBytes = FALSE)
strsplit(data$genres, "", fixed = FALSE, perl = FALSE, useBytes = FALSE)
strsplit(data$genres, "|", fixed = FALSE, perl = FALSE, useBytes = FALSE)
strsplit(data$genres, " ", fixed = FALSE, perl = FALSE, useBytes = FALSE)
```{r}
splitPopGenres <- c(movies$genres)
splitPopGenres <- c(data$genres)
splitPopGenres
splitPopGenres <- strsplit(splitPopGenres, "|", fixed = TRUE)
splitPopGenres
splitPopGenres <- unlist(splitPopGenres)
splitPopGenres
splitPopGenres <- table(splitPopGenres)
splitPopGenres
barplot(splitPopGenres, horiz = TRUE, xlab = 'Frecuencia', main = ' Generos', col=col3, las = 1)
splitPopGenres <- c(data$genres)
splitPopGenres <- strsplit(splitPopGenres, "|", fixed = TRUE)
splitPopGenres <- unlist(splitPopGenres)
splitPopGenres <- table(splitPopGenres)
barplot(splitPopGenres, horiz = TRUE, xlab = 'Frecuencia', main = ' Generos', col=col3, las = 1)
barplot(splitPopGenres, horiz = TRUE, xlab = 'Frecuencia', main = ' Generos')
barplot(splitPopGenres, horiz = TRUE, xlab = 'Frecuencia', main = ' Generos', col=col3, las = 1)
col3 <- brewer.pal(9,'Pastel1')
barplot(splitPopGenres, horiz = TRUE, xlab = 'Frecuencia', main = ' Generos', col=col3, las = 1)
barplot(splitPopGenres, horiz = TRUE, xlab = 'Frecuencia', main = ' Generos', las = 1)
barplot(splitPopGenres, xlab = 'Frecuencia', main = ' Generos', las = 1)
barplot(splitPopGenres, xlab = 'Frecuencia', main = ' Generos', )
barplot(splitPopGenres, xlab = 'Frecuencia', main = ' Generos' )
splitPopGenres <- table(splitPopGenres)
splitPopGenres <- table(splitPopGenres)
barplot(splitPopGenres, xlab = 'Frecuencia', main = ' Generos' )
splitPopGenres <- c(data$genres)
splitPopGenres <- strsplit(splitPopGenres, "|", fixed = TRUE)
splitPopGenres <- unlist(splitPopGenres)
splitPopGenres <- table(splitPopGenres)
barplot(splitPopGenres, xlab = 'Frecuencia', main = ' Generos' )
barplot(data$director, xlab = 'Frecuencia', main = ' Generos' )
barplot(directores, xlab = 'Frecuencia', main = ' Generos' )
directores = c(data$director)
directores <- unlist(directores)
directores <- table(directores)
barplot(directores, xlab = 'Frecuencia', main = ' Generos' )
production_companies = c(data$production_companies)
production_companies <- unlist(directores)
production_companies <- table(directores)
barplot(directores, xlab = 'Frecuencia', main = ' Compañias de producción' )
production_companies = c(data$production_companies)
production_companies <- unlist(production_companies)
production_companies <- table(production_companies)
barplot(directores, xlab = 'Frecuencia', main = ' Compañias de producción' )
production_companies = c(data$production_companies)
production_companies <- unlist(production_companies)
production_companies <- table(production_companies)
barplot(production_companies, xlab = 'Frecuencia', main = ' Compañias de producción' )
View(data)
splitcasts <- c(data$cast)
splitcasts <- strsplit(splitcasts, "|", fixed = TRUE)
splitcasts <- unlist(splitcasts)
splitcasts <- table(splitcasts)
barplot(splitcasts, xlab = 'Frecuencia', main = 'Actores' )
barplot(production_companies, xlab = 'Frecuencia', main = ' Compañias de producción' )
splitcasts <- c(data$cast)
splitcasts <- strsplit(splitcasts, "|", fixed = TRUE)
splitcasts <- unlist(splitcasts)
splitcasts <- table(splitcasts)
barplot(splitcasts, xlab = 'Frecuencia', main = 'Actores' )
data <- data[with(data,order(-"budget")),]
data5 <- data[with(data,order(-"budget")),]
data5 <- data[with(data,order("budget")),]
View(data5)
data5 <- data[order("budget"),]
View(data5)
View(data5)
data5 <- data[order(budget),]
data5 <- data[order("budget"),]
knitr::opts_chunk$set(echo = TRUE)
library(nortest)
data <-read.csv("C:/Users/LENOVO/Desktop/Clases/Minería de datos/HT/HT1DataMining/data/tmdb-movies.csv")
summary(data)
str(data)
hist(data$popularity[data$popularity != 0],
main = "Histograma sobre popularidad de películas en imdb",
xlab = "Indice de popularidad ",
breaks = 105)
qqnorm(data$popularity, pch = 1, frame = FALSE)
qqline(data$popularity, col = "steelblue", lwd = 2)
lillie.test((data$popularity))
data2 = data[data$budget > 1000000,]
hist(data2$budget,
main = "Histograma para el presupuesto de las películas",
xlab = "Presupuesto",
breaks = 105)
qqnorm(data2$budget, pch = 1, frame = FALSE)
qqline(data2$budget, col = "steelblue", lwd = 2)
lillie.test((data2$budget))
data21 = data[data$revenue > 1000000,]
hist(data21$budget,
main = "Histograma para las ganancias de las películas",
xlab = "Presupuesto",
breaks = 100)
qqnorm(data21$revenue, pch = 1, frame = FALSE)
qqline(data2$revenue, col = "steelblue", lwd = 2)
data3 = data[data$runtime > 30,]
hist(data2$runtime,
main = "Histograma para la duración de las películas",
xlab = "Tiempo (m)",
breaks = 105)
splitPopGenres <- c(data$genres)
splitPopGenres <- strsplit(splitPopGenres, "|", fixed = TRUE)
splitPopGenres <- unlist(splitPopGenres)
splitPopGenres <- table(splitPopGenres)
barplot(splitPopGenres, xlab = 'Frecuencia', main = ' Generos' )
directores = c(data$director)
directores <- unlist(directores)
directores <- table(directores)
barplot(directores, xlab = 'Frecuencia', main = ' directores' )
production_companies = c(data$production_companies)
production_companies <- unlist(production_companies)
production_companies <- table(production_companies)
barplot(production_companies, xlab = 'Frecuencia', main = ' Compañias de producción' )
splitcasts <- c(data$cast)
splitcasts <- strsplit(splitcasts, "|", fixed = TRUE)
splitcasts <- unlist(splitcasts)
splitcasts <- table(splitcasts)
barplot(splitcasts, xlab = 'Frecuencia', main = 'Actores' )
data5 <- data[order(-"budget"),]
data5 <- data[order(-budget),]
data5 <- data[order(-data$budget),]
tail(data5,10)
data5 <- data[order(data$budget),]
tail(data5,10)
tail(data5$original_title,10)
View(data5)
tail(data5$budget,10)
head(data5$budget,10)
head(data5$original_title,10)
data5 <- data[order(-data$budget),]
head(data5$original_title,10)
data6 <- data[order(-data$revenue),]
head(data6$original_title,10)
knitr::opts_chunk$set(echo = TRUE)
library(nortest)
data <-read.csv("C:/Users/LENOVO/Desktop/Clases/Minería de datos/HT/HT1DataMining/data/tmdb-movies.csv")
summary(data)
str(data)
hist(data$popularity[data$popularity != 0],
main = "Histograma sobre popularidad de películas en imdb",
xlab = "Indice de popularidad ",
breaks = 105)
qqnorm(data$popularity, pch = 1, frame = FALSE)
qqline(data$popularity, col = "steelblue", lwd = 2)
lillie.test((data$popularity))
data2 = data[data$budget > 1000000,]
hist(data2$budget,
main = "Histograma para el presupuesto de las películas",
xlab = "Presupuesto",
breaks = 105)
qqnorm(data2$budget, pch = 1, frame = FALSE)
qqline(data2$budget, col = "steelblue", lwd = 2)
lillie.test((data2$budget))
data21 = data[data$revenue > 1000000,]
hist(data21$budget,
main = "Histograma para las ganancias de las películas",
xlab = "Presupuesto",
breaks = 100)
qqnorm(data21$revenue, pch = 1, frame = FALSE)
qqline(data2$revenue, col = "steelblue", lwd = 2)
data3 = data[data$runtime > 30,]
hist(data2$runtime,
main = "Histograma para la duración de las películas",
xlab = "Tiempo (m)",
breaks = 105)
splitPopGenres <- c(data$genres)
splitPopGenres <- strsplit(splitPopGenres, "|", fixed = TRUE)
splitPopGenres <- unlist(splitPopGenres)
splitPopGenres <- table(splitPopGenres)
barplot(splitPopGenres, xlab = 'Frecuencia', main = ' Generos' )
directores = c(data$director)
directores <- unlist(directores)
directores <- table(directores)
barplot(directores, xlab = 'Frecuencia', main = ' directores' )
production_companies = c(data$production_companies)
production_companies <- unlist(production_companies)
production_companies <- table(production_companies)
barplot(production_companies, xlab = 'Frecuencia', main = ' Compañias de producción' )
splitcasts <- c(data$cast)
splitcasts <- strsplit(splitcasts, "|", fixed = TRUE)
splitcasts <- unlist(splitcasts)
splitcasts <- table(splitcasts)
barplot(splitcasts, xlab = 'Frecuencia', main = 'Actores' )
data5 <- data[order(-data$budget),]
head(data5$original_title,10)
data6 <- data[order(-data$revenue),]
head(data6$original_title,10)
install.packages("nbClust")
View(data)
View(data)
install.package(NbClust)
install.packages(NbClust)
install.packages("NbClust")
install.packages("e1071")
install.packages("cluster")
install.packages("mclust")
install.packages("mclust")
install.packages("fpc")
install.packages("factoextra")
typeof((data$MSZoning))
setwd("C:/Users/LENOVO/Desktop/Clases/Minería de datos/Github/HT3.Arboles_de_decision")
library(corrplot)
data <- read.csv("house-prices-advanced-regression-techniques/test.csv")
typeof((data$MSZoning))
typeof((data$MSZoning)) == "character"
names(data)
nombres <- names(data)
summary(data)
if(typeof(data[val,]) = 'character') barplot(table(data[val,]),main = val)
if(typeof(data[val,]) == 'character') barplot(table(data[val,]),main = val)
print(val)
nombres <- names(data)
for (val in nombres  ){
print(val)
if(typeof(data[val,]) == 'character') barplot(table(data[val,]),main = val)
}
if(typeof(data[val,]) == 'character') print("putita")
nombres <- names(data)
for (val in nombres  ){
if(typeof(data[val,]) == 'character') print("putita")
}
print(typeof(data[val,]))
print(typeof(data[val,]))
print(typeof(data[val]))
print(typeof(data$val))
nombres <- names(data)
for (val in nombres  ){
print(typeof(data$val))
if(typeof(data[val,]) == 'character') print("putita")
}
print(typeof(data[,val]))
for (val in nombres  ){
print(typeof(data[,val]))
if(typeof(data[,val]) == 'character') print("putita")
}
nombres <- names(data)
for (val in nombres  ){
print(typeof(data[,val]))
if(typeof(data[,val]) == 'character'){barplot(data[,val], main = val)}
else {barplot(data[,val], main = val, break = 332, main = val)}
}
else barplot(data[,val], main = val, break = 332, main = val)
nombres <- names(data)
for (val in nombres  ){
print(typeof(data[,val]))
if(typeof(data[,val]) == 'character')barplot(data[,val], main = val)
else barplot(data[,val], main = val, break = 332, main = val)
}
else {barplot(data[,val], main = val, break = 332, main = val)}
if(typeof(data[,val]) == 'character'){barplot(data[,val], main = val)
}else {barplot(data[,val], main = val, break = 332, main = val)}
for (val in nombres  ){
print(typeof(data[,val]))
if(typeof(data[,val]) == 'character'){barplot(data[,val], main = val)
}else {barplot(data[,val], main = val, break = 332, main = val)}
}
if(typeof(data[,val]) == 'character'){barplot(data[,val], main = val)
}if (typeof(data[,val]) == 'interger' || typeof(data[,val]) == 'double'){barplot(data[,val], main = val, break = 332, main = val)}
if(typeof(data[,val]) == 'character') barplot(data[,val], main = val)
if (typeof(data[,val]) == 'interger' || typeof(data[,val]) == 'double'){barplot(data[,val], main = val, break = 332, main = val)}
nombres <- names(data)
for (val in nombres  ){
print(typeof(data[,val]))
if(typeof(data[,val]) == 'character') barplot(data[,val], main = val)
if (typeof(data[,val]) == 'interger' || typeof(data[,val]) == 'double'){barplot(data[,val], main = val, break = 332, main = val)}
}
for (val in nombres  ){
print(typeof(data[,val]))
if(typeof(data[,val]) == 'character') barplot(data[,val], main = val)
if (typeof(data[,val]) == 'interger' || typeof(data[,val]) == 'double'){barplot(data[,val], main = val, break = 332, main = val)}
}
for (val in nombres  ){
print(typeof(data[,val]))
if(typeof(data[,val]) == 'character') barplot(data[,val], main = val)
if (typeof(data[,val]) == 'interger' || typeof(data[,val]) == 'double'){barplot(data[,val], main = val, break = 332, main = val)}
}
for (val in nombres  ){
print(typeof(data[,val]))
if(typeof(data[,val]) == 'character') barplot(data[,val], main = val)
if (typeof(data[,val]) == 'interger' || typeof(data[,val]) == 'double'){barplot(data[,val], main = val, break = 332, main = val)}
}
for (val in nombres  ){
print(typeof(data[,val]))
if(typeof(data[,val]) == 'character') barplot(data[,val], main = val)
if (typeof(data[,val]) == 'interger' || typeof(data[,val]) == 'double')barplot(data[,val], main = val, break = 332, main = val)
}
for (val in nombres  ){
print(typeof(data[,val]))
if(typeof(data[,val]) == 'character') barplot(data[,val], main = val)
if (typeof(data[,val]) == 'interger' || typeof(data[,val]) == 'double')barplot(data[,val], main = val, break = 332, main = val)
}
for (val in nombres  ){
print(typeof(data[,val]))
if(typeof(data[,val]) == 'character') barplot(data[,val], main = val)
if (typeof(data[,val]) == 'interger' || typeof(data[,val]) == 'double')barplot(data[,val], main = val, break = 332, main = val)
}
setwd("C:/Users/LENOVO/Desktop/Clases/Minería de datos/Github/HT3.Arboles_de_decision")
library(corrplot)
data <- read.csv("house-prices-advanced-regression-techniques/test.csv")
summary(data)
data <- data[!is.na(data),]
barplot(table(data$MSSubClass), main = ' Identifies the type of dwelling involved in the sale')
barplot(table(data$MSZoning), main = 'Identifies the general zoning classification of the sale')
hist(table(data$LotFrontage), breaks = 332, main = ' Linear feet of street connected to property')
hist(table(data$LotArea),breaks = 332, main = ' Lot size in square feet')
barplot(table(data$Street), main = 'Type of road access to property')
barplot(table(data$Alley))
barplot(table(data$LotShape))
barplot(table(data$LandContour))
barplot(table(data$Utilities))
nombres <- names(data)
for (val in nombres  ){
print(typeof(data[,val]))
if(typeof(data[,val]) == 'character') barplot(data[,val], main = val)
if (typeof(data[,val]) == 'interger' || typeof(data[,val]) == 'double')barplot(data[,val], main = val, break = 332, main = val)
}
for (val in nombres  ){
print(typeof(data[,val]))
if(typeof(data[,val]) == 'character') barplot(data[,val], main = val)
if (typeof(data[,val]) == 'interger' || typeof(data[,val]) == 'double') barplot(data[,val], main = val, break = 332)}
hist(table(data$LotFrontage), breaks = 332, main = ' Linear feet of street connected to property')
for (val in nombres  ){
print(typeof(data[,val]))
if(typeof(data[,val]) == 'character') barplot(data[,val], main = val)
if (typeof(data[,val]) == 'interger' || typeof(data[,val]) == 'double') barplot(data[,val], main = val, break = 332)}
if (typeof(data[,val]) == 'interger' || typeof(data[,val]) == 'double') hist(data[,val], main = val, break = 332)}
if (typeof(data[,val]) == 'interger' || typeof(data[,val]) == 'double') hist(table(data[,val]), main = val, break = 332)}
for (val in nombres  ){
print(typeof(data[,val]))
if(typeof(data[,val]) == 'character') barplot(data[,val], main = val)
if (typeof(data[,val]) == 'interger' || typeof(data[,val]) == 'double') hist(table(data[,val]), main = val, break = 332)}
for (val in nombres  ){
for (val in nombres  ){
if(typeof(data[,val]) == 'character') barplot(data[,val], main = val)
if(typeof(data[,val]) == 'character') barplot(data[,val], main = val)
if(typeof(data[,val]) == 'character') print("putita")
for (val in nombres  ){
for (val in nombres  ){
#print(typeof(data[,val]))
if(typeof(data[,val]) == 'character') print("putita")}
for (val in nombres  ){
if(typeof(data[,val]) == 'character') print("putita")
}
for (val in nombres  ){
if(typeof(data[,val]) == 'character') print("putita")
}
if(typeof(data[,val]) == 'character') print(val)
print(val)
for (val in nombres  ){
print(val)
if(typeof(data[,val]) == 'character')
}
for (val in nombres  ){
print(val)
if(typeof(data[,val]) == 'character')
}
nombres <- names(data)
for (val in nombres  ){
print(val)
if(typeof(data[,val]) == 'character')
}
nombres <- names(data)
for (val in nombres  ){
print(val)
if(typeof(data[,val]) == 'character')
}
if(typeof(data[,val]) == 'character') }
for (val in nombres  ){
print(val)
if(typeof(data[,val]) == 'character') }
for (val in nombres  ){
print(val)
if(typeof(data[,val]) == 'character') }
for (val in nombres  ){
print(val)
if(typeof(data[,val]) == 'character')
}
if(typeof(data[,val]) == 'character') {}
nombres <- names(data)
for (val in nombres  ){
print(val)
if(typeof(data[,val]) == 'character') {}
}
for (val in nombres  ){
print(val)
if(typeof(data[,val]) == 'character')
}
print(val)
for (val in nombres  ){
print(val)
if(typeof(data[,val]) == 'character'){}
}
if(typeof(data[,val]) == 'character'){print(val)}
for (val in nombres  ){
if(typeof(data[,val]) == 'character'){print(val)}
}
if(typeof(data[,val]) == 'character'){typeof(data[,val]}
}
for (val in nombres  ){
for (val in nombres  ){
if(typeof(data[,val]) == 'character'){print(typeof(data[,val])}
}
for (val in nombres  ){
if(typeof(data[,val]) == 'character'){val}
}
for (val in nombres  ){
if(typeof(data[,val]) == 'character'){val}
}
for (val in nombres  ){
if(typeof(data[,val]) == 'character'){val}
}
for (val in nombres  ){
if(typeof(data[,val]) == 'character'){print(val)}
}
if(typeof(data[,val]) == 'character'){barplot(data[,val])}
barplot(table(data$Alley))
if(typeof(data[,val]) == 'character'){barplot(table(data[,val]))}
if(typeof(data[,val]) == 'character'){sort(table(data[,val]))}
if(typeof(data[,val]) == 'character'){print(sort(table(data[,val])))}
for (val in nombres  ){
if(typeof(data[,val]) == 'character'){print(sort(table(data[,val])))}
}
summary(data)
if(typeof(data[,val]) == 'character'){print(sort(table(data[,val])))}
nombres <- names(data)
for (val in nombres  ){
if(typeof(data[,val]) == 'character'){print(sort(table(data[,val])))}
}
for (val in nombres  ){
if(typeof(data[,val]) == 'character'){
print(sort(table(data[,val])))}
}
print(val)
for (val in nombres  ){
if(typeof(data[,val]) == 'character'){
print(val)
print(sort(table(data[,val])))}
}
print("")
for (val in nombres  ){
if(typeof(data[,val]) == 'character'){
print("")
print(val)
print(sort(table(data[,val])))}
}
for (val in nombres  ){
if(typeof(data[,val]) == 'character'){
print()
print(val)
print(sort(table(data[,val])))}
}
for (val in nombres  ){
if(typeof(data[,val]) == 'character'){
print("/n")
print(val )
print(sort(table(data[,val])))}
}
for (val in nombres  ){
if(typeof(data[,val]) == 'character'){
print("\n")
print(val )
print(sort(table(data[,val])))}
}
for (val in nombres  ){
if(typeof(data[,val]) == 'character'){
print(\n)
print(val )
print(sort(table(data[,val])))}
}
print("\n")
for (val in nombres  ){
if(typeof(data[,val]) == 'character'){
print("\n")
print(val )
print(sort(table(data[,val])))}
}
cat("\n")
nombres <- names(data)
for (val in nombres  ){
if(typeof(data[,val]) == 'character'){
cat("\n")
print(val )
print(sort(table(data[,val])))}
}
for (val in nombres  ){
if(typeof(data[,val]) == 'character'){
cat("\n")
print(val + "\n" )
print(sort(table(data[,val])))}
}
cat( val,"\n" )
for (val in nombres  ){
if(typeof(data[,val]) == 'character'){
cat("\n")
cat( val,"\n" )
print(sort(table(data[,val])))}
}
